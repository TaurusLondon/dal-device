//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.02 at 10:51:22 AM IST 
//

package com.vf.uk.dal.device.datamodel.bundle;

import java.util.List;

public class CommercialBundle  {
	
	protected String id;

	protected String name;

	protected String desc;

	protected String paymentType;

	protected Availability availability;

	protected Commitment commitment;

	protected List<String> categories;

	protected List<String> productLines;// Changed from bundleLines to
										// ProductLines
    protected List<DevicePrice> deviceSpecificPricing;

    protected BundleComposition bundleComposition;

    protected List<ServiceProduct> serviceProducts;

    protected List<Allowance> allowances;

    protected Float recurringCharge;

    protected TerminationFee terminationFee;

    protected List<Path> migrationPaths;

    protected List<Path> upgradePaths;

    protected List<Path> preToPostPaths;

    protected boolean isDiscountable;

    protected String version;

	// Attributes of MEF Metadata file
	protected String metadataVersion;

	protected String seoCanonical;

	protected String seoDescription;

	protected String seoKeywords;

	protected String seoIndex;

	protected String seoRobots;
	
	protected String eligibilitySubflow;

	// Attributes of MEF Content file
	protected String displayName;

	protected String contentDesc;

	protected String fullDetails;

	protected String descMobile;

	protected String fullDetailsMobile;

	protected String contentVersion;

	protected List<ImageURL> listOfimageURLs;

	protected List<MediaURL> listOfmediaURLs;

	protected List<Group> specificationGroups;

	// Attributes of MEF Merchandising file

	protected BundleControl bundleControl;

	protected ProductGroups productGroups;

	protected Misc misc;

	protected PromoteAs promoteAs;

	protected List<BundleDeviceSpecificPricingOverrides> bundleDeviceSpecificPricingOverrides;

	protected String postSaleJourney;

	protected String displayGroup;

	protected String merchandisingVersion;
	
	protected List<BundlePriceOverride> bundlePriceOverride;

	protected List<Recommendations> recommendataions;
	
	protected List<EligibleChannel> listOfEligibleChannels;
	
	
	
	public CommercialBundle() {
		super();
	}

	/*public int getImplVersion() {
		return VERSION;
	}*/

	public String getId() {
		return this.id;
	}
	public void setBundleID(String id) {
		this.id = id;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getDesc() {
		return desc;
	}

	public void setDesc(String desc) {
		this.desc = desc;
	}

	public String getPaymentType() {
		return paymentType;
	}

	public void setPaymentType(String paymentType) {
		this.paymentType = paymentType;
	}

	public Availability getAvailability() {
		return availability;
	}

	public void setAvailability(Availability availability) {
		this.availability = availability;
	}

	public Commitment getCommitment() {
		return commitment;
	}

	public void setCommitment(Commitment commitment) {
		this.commitment = commitment;
	}

	public List<String> getCategories() {
		return categories;
	}

	public void setCategories(List<String> categories) {
		this.categories = categories;
	}

	public List<String> getProductLines() {
		return productLines;
	}

	public void setProductLines(List<String> productLines) {
		this.productLines = productLines;
	}

	public List<DevicePrice> getDeviceSpecificPricing() {
		return deviceSpecificPricing;
	}

	public void setDeviceSpecificPricing(List<DevicePrice> deviceSpecificPricing) {
		this.deviceSpecificPricing = deviceSpecificPricing;
	}

	public BundleComposition getBundleComposition() {
		return bundleComposition;
	}

	public void setBundleComposition(BundleComposition bundleComposition) {
		this.bundleComposition = bundleComposition;
	}

	public List<ServiceProduct> getServiceProducts() {
		return serviceProducts;
	}

	public void setServiceProducts(List<ServiceProduct> serviceProducts) {
		this.serviceProducts = serviceProducts;
	}

	public List<Allowance> getAllowances() {
		return allowances;
	}

	public void setAllowances(List<Allowance> allowances) {
		this.allowances = allowances;
	}

	public Float getRecurringCharge() {
		return recurringCharge;
	}

	public void setRecurringCharge(Float recurringCharge) {
		this.recurringCharge = recurringCharge;
	}

	public TerminationFee getTerminationFee() {
		return terminationFee;
	}

	public void setTerminationFee(TerminationFee terminationFee) {
		this.terminationFee = terminationFee;
	}

	public List<Path> getMigrationPaths() {
		return migrationPaths;
	}

	public void setMigrationPaths(List<Path> migrationPaths) {
		this.migrationPaths = migrationPaths;
	}

	public List<Path> getUpgradePaths() {
		return upgradePaths;
	}

	public void setUpgradePaths(List<Path> upgradePaths) {
		this.upgradePaths = upgradePaths;
	}

	public List<Path> getPreToPostPaths() {
		return preToPostPaths;
	}

	public void setPreToPostPaths(List<Path> preToPostPaths) {
		this.preToPostPaths = preToPostPaths;
	}

	public boolean isDiscountable() {
		return isDiscountable;
	}

	public void setDiscountable(boolean isDiscountable) {
		this.isDiscountable = isDiscountable;
	}

	public String getVersion() {
		return version;
	}

	public void setVersion(String version) {
		this.version = version;
	}

	public String getMetadataVersion() {
		return metadataVersion;
	}

	public void setMetadataVersion(String metadataVersion) {
		this.metadataVersion = metadataVersion;
	}

	public String getSeoCanonical() {
		return seoCanonical;
	}

	public void setSeoCanonical(String seoCanonical) {
		this.seoCanonical = seoCanonical;
	}

	public String getSeoDescription() {
		return seoDescription;
	}

	public void setSeoDescription(String seoDescription) {
		this.seoDescription = seoDescription;
	}

	public String getSeoKeywords() {
		return seoKeywords;
	}

	public void setSeoKeywords(String seoKeywords) {
		this.seoKeywords = seoKeywords;
	}

	public String getSeoIndex() {
		return seoIndex;
	}

	public void setSeoIndex(String seoIndex) {
		this.seoIndex = seoIndex;
	}

	public String getEligibilitySubflow() {
		return eligibilitySubflow;
	}

	public void setEligibilitySubflow(String eligibilitySubflow) {
		this.eligibilitySubflow = eligibilitySubflow;
	}

	public String getDisplayName() {
		return displayName;
	}

	public void setDisplayName(String displayName) {
		this.displayName = displayName;
	}

	public String getContentDesc() {
		return contentDesc;
	}

	public void setContentDesc(String contentDesc) {
		this.contentDesc = contentDesc;
	}

	public String getFullDetails() {
		return fullDetails;
	}

	public void setFullDetails(String fullDetails) {
		this.fullDetails = fullDetails;
	}

	public String getDescMobile() {
		return descMobile;
	}

	public void setDescMobile(String descMobile) {
		this.descMobile = descMobile;
	}

	public String getFullDetailsMobile() {
		return fullDetailsMobile;
	}

	public void setFullDetailsMobile(String fullDetailsMobile) {
		this.fullDetailsMobile = fullDetailsMobile;
	}

	public String getContentVersion() {
		return contentVersion;
	}

	public void setContentVersion(String contentVersion) {
		this.contentVersion = contentVersion;
	}

	public List<ImageURL> getListOfimageURLs() {
		return listOfimageURLs;
	}

	public void setListOfimageURLs(List<ImageURL> listOfimageURLs) {
		this.listOfimageURLs = listOfimageURLs;
	}

	public List<MediaURL> getListOfmediaURLs() {
		return listOfmediaURLs;
	}

	public void setListOfmediaURLs(List<MediaURL> listOfmediaURLs) {
		this.listOfmediaURLs = listOfmediaURLs;
	}

	public List<Group> getSpecificationGroups() {
		return specificationGroups;
	}

	public void setSpecificationGroups(List<Group> specificationGroups) {
		this.specificationGroups = specificationGroups;
	}

	public BundleControl getBundleControl() {
		return bundleControl;
	}

	public void setBundleControl(BundleControl bundleControl) {
		this.bundleControl = bundleControl;
	}

	public ProductGroups getProductGroups() {
		return productGroups;
	}

	public void setProductGroups(ProductGroups productGroups) {
		this.productGroups = productGroups;
	}

	public Misc getMisc() {
		return misc;
	}

	public void setMisc(Misc misc) {
		this.misc = misc;
	}

	public PromoteAs getPromoteAs() {
		return promoteAs;
	}

	public void setPromoteAs(PromoteAs promoteAs) {
		this.promoteAs = promoteAs;
	}

	public List<BundleDeviceSpecificPricingOverrides> getBundleDeviceSpecificPricingOverrides() {
		return bundleDeviceSpecificPricingOverrides;
	}

	public void setBundleDeviceSpecificPricingOverrides(
			List<BundleDeviceSpecificPricingOverrides> bundleDeviceSpecificPricingOverrides) {
		this.bundleDeviceSpecificPricingOverrides = bundleDeviceSpecificPricingOverrides;
	}

	public String getPostSaleJourney() {
		return postSaleJourney;
	}

	public void setPostSaleJourney(String postSaleJourney) {
		this.postSaleJourney = postSaleJourney;
	}

	public String getDisplayGroup() {
		return displayGroup;
	}

	public void setDisplayGroup(String displayGroup) {
		this.displayGroup = displayGroup;
	}

	public String getMerchandisingVersion() {
		return merchandisingVersion;
	}

	public void setMerchandisingVersion(String merchandisingVersion) {
		this.merchandisingVersion = merchandisingVersion;
	}

	public List<BundlePriceOverride> getBundlePriceOverride() {
		return bundlePriceOverride;
	}

	public void setBundlePriceOverride(List<BundlePriceOverride> bundlePriceOverride) {
		this.bundlePriceOverride = bundlePriceOverride;
	}

	public List<Recommendations> getRecommendataions() {
		return recommendataions;
	}

	public void setRecommendataions(List<Recommendations> recommendataions) {
		this.recommendataions = recommendataions;
	}
	
	

	public String getSeoRobots() {
		return seoRobots;
	}

	public void setSeoRobots(String seoRobots) {
		this.seoRobots = seoRobots;
	}

	public void setId(String id) {
		this.id = id;
	}

	public List<EligibleChannel> getListOfEligibleChannels() {
		return listOfEligibleChannels;
	}

	public void setListOfEligibleChannels(List<EligibleChannel> listOfEligibleChannels) {
		this.listOfEligibleChannels = listOfEligibleChannels;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((allowances == null) ? 0 : allowances.hashCode());
		result = prime * result + ((availability == null) ? 0 : availability.hashCode());
		result = prime * result + ((bundleComposition == null) ? 0 : bundleComposition.hashCode());
		result = prime * result + ((bundleControl == null) ? 0 : bundleControl.hashCode());
		result = prime * result + ((bundleDeviceSpecificPricingOverrides == null) ? 0
				: bundleDeviceSpecificPricingOverrides.hashCode());
		result = prime * result + ((bundlePriceOverride == null) ? 0 : bundlePriceOverride.hashCode());
		result = prime * result + ((categories == null) ? 0 : categories.hashCode());
		result = prime * result + ((commitment == null) ? 0 : commitment.hashCode());
		result = prime * result + ((contentDesc == null) ? 0 : contentDesc.hashCode());
		result = prime * result + ((contentVersion == null) ? 0 : contentVersion.hashCode());
		result = prime * result + ((desc == null) ? 0 : desc.hashCode());
		result = prime * result + ((descMobile == null) ? 0 : descMobile.hashCode());
		result = prime * result + ((deviceSpecificPricing == null) ? 0 : deviceSpecificPricing.hashCode());
		result = prime * result + ((displayGroup == null) ? 0 : displayGroup.hashCode());
		result = prime * result + ((displayName == null) ? 0 : displayName.hashCode());
		result = prime * result + ((eligibilitySubflow == null) ? 0 : eligibilitySubflow.hashCode());
		result = prime * result + ((fullDetails == null) ? 0 : fullDetails.hashCode());
		result = prime * result + ((fullDetailsMobile == null) ? 0 : fullDetailsMobile.hashCode());
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		result = prime * result + (isDiscountable ? 1231 : 1237);
		result = prime * result + ((listOfEligibleChannels == null) ? 0 : listOfEligibleChannels.hashCode());
		result = prime * result + ((listOfimageURLs == null) ? 0 : listOfimageURLs.hashCode());
		result = prime * result + ((listOfmediaURLs == null) ? 0 : listOfmediaURLs.hashCode());
		result = prime * result + ((merchandisingVersion == null) ? 0 : merchandisingVersion.hashCode());
		result = prime * result + ((metadataVersion == null) ? 0 : metadataVersion.hashCode());
		result = prime * result + ((migrationPaths == null) ? 0 : migrationPaths.hashCode());
		result = prime * result + ((misc == null) ? 0 : misc.hashCode());
		result = prime * result + ((name == null) ? 0 : name.hashCode());
		result = prime * result + ((paymentType == null) ? 0 : paymentType.hashCode());
		result = prime * result + ((postSaleJourney == null) ? 0 : postSaleJourney.hashCode());
		result = prime * result + ((preToPostPaths == null) ? 0 : preToPostPaths.hashCode());
		result = prime * result + ((productGroups == null) ? 0 : productGroups.hashCode());
		result = prime * result + ((productLines == null) ? 0 : productLines.hashCode());
		result = prime * result + ((promoteAs == null) ? 0 : promoteAs.hashCode());
		result = prime * result + ((recommendataions == null) ? 0 : recommendataions.hashCode());
		result = prime * result + ((recurringCharge == null) ? 0 : recurringCharge.hashCode());
		result = prime * result + ((seoCanonical == null) ? 0 : seoCanonical.hashCode());
		result = prime * result + ((seoDescription == null) ? 0 : seoDescription.hashCode());
		result = prime * result + ((seoIndex == null) ? 0 : seoIndex.hashCode());
		result = prime * result + ((seoKeywords == null) ? 0 : seoKeywords.hashCode());
		result = prime * result + ((seoRobots == null) ? 0 : seoRobots.hashCode());
		result = prime * result + ((serviceProducts == null) ? 0 : serviceProducts.hashCode());
		result = prime * result + ((specificationGroups == null) ? 0 : specificationGroups.hashCode());
		result = prime * result + ((terminationFee == null) ? 0 : terminationFee.hashCode());
		result = prime * result + ((upgradePaths == null) ? 0 : upgradePaths.hashCode());
		result = prime * result + ((version == null) ? 0 : version.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		CommercialBundle other = (CommercialBundle) obj;
		if (allowances == null) {
			if (other.allowances != null)
				return false;
		} else if (!allowances.equals(other.allowances))
			return false;
		if (availability == null) {
			if (other.availability != null)
				return false;
		} else if (!availability.equals(other.availability))
			return false;
		if (bundleComposition == null) {
			if (other.bundleComposition != null)
				return false;
		} else if (!bundleComposition.equals(other.bundleComposition))
			return false;
		if (bundleControl == null) {
			if (other.bundleControl != null)
				return false;
		} else if (!bundleControl.equals(other.bundleControl))
			return false;
		if (bundleDeviceSpecificPricingOverrides == null) {
			if (other.bundleDeviceSpecificPricingOverrides != null)
				return false;
		} else if (!bundleDeviceSpecificPricingOverrides.equals(other.bundleDeviceSpecificPricingOverrides))
			return false;
		if (bundlePriceOverride == null) {
			if (other.bundlePriceOverride != null)
				return false;
		} else if (!bundlePriceOverride.equals(other.bundlePriceOverride))
			return false;
		if (categories == null) {
			if (other.categories != null)
				return false;
		} else if (!categories.equals(other.categories))
			return false;
		if (commitment == null) {
			if (other.commitment != null)
				return false;
		} else if (!commitment.equals(other.commitment))
			return false;
		if (contentDesc == null) {
			if (other.contentDesc != null)
				return false;
		} else if (!contentDesc.equals(other.contentDesc))
			return false;
		if (contentVersion == null) {
			if (other.contentVersion != null)
				return false;
		} else if (!contentVersion.equals(other.contentVersion))
			return false;
		if (desc == null) {
			if (other.desc != null)
				return false;
		} else if (!desc.equals(other.desc))
			return false;
		if (descMobile == null) {
			if (other.descMobile != null)
				return false;
		} else if (!descMobile.equals(other.descMobile))
			return false;
		if (deviceSpecificPricing == null) {
			if (other.deviceSpecificPricing != null)
				return false;
		} else if (!deviceSpecificPricing.equals(other.deviceSpecificPricing))
			return false;
		if (displayGroup == null) {
			if (other.displayGroup != null)
				return false;
		} else if (!displayGroup.equals(other.displayGroup))
			return false;
		if (displayName == null) {
			if (other.displayName != null)
				return false;
		} else if (!displayName.equals(other.displayName))
			return false;
		if (eligibilitySubflow == null) {
			if (other.eligibilitySubflow != null)
				return false;
		} else if (!eligibilitySubflow.equals(other.eligibilitySubflow))
			return false;
		if (fullDetails == null) {
			if (other.fullDetails != null)
				return false;
		} else if (!fullDetails.equals(other.fullDetails))
			return false;
		if (fullDetailsMobile == null) {
			if (other.fullDetailsMobile != null)
				return false;
		} else if (!fullDetailsMobile.equals(other.fullDetailsMobile))
			return false;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		if (isDiscountable != other.isDiscountable)
			return false;
		if (listOfEligibleChannels == null) {
			if (other.listOfEligibleChannels != null)
				return false;
		} else if (!listOfEligibleChannels.equals(other.listOfEligibleChannels))
			return false;
		if (listOfimageURLs == null) {
			if (other.listOfimageURLs != null)
				return false;
		} else if (!listOfimageURLs.equals(other.listOfimageURLs))
			return false;
		if (listOfmediaURLs == null) {
			if (other.listOfmediaURLs != null)
				return false;
		} else if (!listOfmediaURLs.equals(other.listOfmediaURLs))
			return false;
		if (merchandisingVersion == null) {
			if (other.merchandisingVersion != null)
				return false;
		} else if (!merchandisingVersion.equals(other.merchandisingVersion))
			return false;
		if (metadataVersion == null) {
			if (other.metadataVersion != null)
				return false;
		} else if (!metadataVersion.equals(other.metadataVersion))
			return false;
		if (migrationPaths == null) {
			if (other.migrationPaths != null)
				return false;
		} else if (!migrationPaths.equals(other.migrationPaths))
			return false;
		if (misc == null) {
			if (other.misc != null)
				return false;
		} else if (!misc.equals(other.misc))
			return false;
		if (name == null) {
			if (other.name != null)
				return false;
		} else if (!name.equals(other.name))
			return false;
		if (paymentType == null) {
			if (other.paymentType != null)
				return false;
		} else if (!paymentType.equals(other.paymentType))
			return false;
		if (postSaleJourney == null) {
			if (other.postSaleJourney != null)
				return false;
		} else if (!postSaleJourney.equals(other.postSaleJourney))
			return false;
		if (preToPostPaths == null) {
			if (other.preToPostPaths != null)
				return false;
		} else if (!preToPostPaths.equals(other.preToPostPaths))
			return false;
		if (productGroups == null) {
			if (other.productGroups != null)
				return false;
		} else if (!productGroups.equals(other.productGroups))
			return false;
		if (productLines == null) {
			if (other.productLines != null)
				return false;
		} else if (!productLines.equals(other.productLines))
			return false;
		if (promoteAs == null) {
			if (other.promoteAs != null)
				return false;
		} else if (!promoteAs.equals(other.promoteAs))
			return false;
		if (recommendataions == null) {
			if (other.recommendataions != null)
				return false;
		} else if (!recommendataions.equals(other.recommendataions))
			return false;
		if (recurringCharge == null) {
			if (other.recurringCharge != null)
				return false;
		} else if (!recurringCharge.equals(other.recurringCharge))
			return false;
		if (seoCanonical == null) {
			if (other.seoCanonical != null)
				return false;
		} else if (!seoCanonical.equals(other.seoCanonical))
			return false;
		if (seoDescription == null) {
			if (other.seoDescription != null)
				return false;
		} else if (!seoDescription.equals(other.seoDescription))
			return false;
		if (seoIndex == null) {
			if (other.seoIndex != null)
				return false;
		} else if (!seoIndex.equals(other.seoIndex))
			return false;
		if (seoKeywords == null) {
			if (other.seoKeywords != null)
				return false;
		} else if (!seoKeywords.equals(other.seoKeywords))
			return false;
		if (seoRobots == null) {
			if (other.seoRobots != null)
				return false;
		} else if (!seoRobots.equals(other.seoRobots))
			return false;
		if (serviceProducts == null) {
			if (other.serviceProducts != null)
				return false;
		} else if (!serviceProducts.equals(other.serviceProducts))
			return false;
		if (specificationGroups == null) {
			if (other.specificationGroups != null)
				return false;
		} else if (!specificationGroups.equals(other.specificationGroups))
			return false;
		if (terminationFee == null) {
			if (other.terminationFee != null)
				return false;
		} else if (!terminationFee.equals(other.terminationFee))
			return false;
		if (upgradePaths == null) {
			if (other.upgradePaths != null)
				return false;
		} else if (!upgradePaths.equals(other.upgradePaths))
			return false;
		if (version == null) {
			if (other.version != null)
				return false;
		} else if (!version.equals(other.version))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "CommercialBundle [id=" + id + ", name=" + name + ", desc=" + desc + ", paymentType=" + paymentType
				+ ", availability=" + availability + ", commitment=" + commitment + ", categories=" + categories
				+ ", productLines=" + productLines + ", deviceSpecificPricing=" + deviceSpecificPricing
				+ ", bundleComposition=" + bundleComposition + ", serviceProducts=" + serviceProducts + ", allowances="
				+ allowances + ", recurringCharge=" + recurringCharge + ", terminationFee=" + terminationFee
				+ ", migrationPaths=" + migrationPaths + ", upgradePaths=" + upgradePaths + ", preToPostPaths="
				+ preToPostPaths + ", isDiscountable=" + isDiscountable + ", version=" + version + ", metadataVersion="
				+ metadataVersion + ", seoCanonical=" + seoCanonical + ", seoDescription=" + seoDescription
				+ ", seoKeywords=" + seoKeywords + ", seoIndex=" + seoIndex + ", seoRobots=" + seoRobots
				+ ", eligibilitySubflow=" + eligibilitySubflow + ", displayName=" + displayName + ", contentDesc="
				+ contentDesc + ", fullDetails=" + fullDetails + ", descMobile=" + descMobile + ", fullDetailsMobile="
				+ fullDetailsMobile + ", contentVersion=" + contentVersion + ", listOfimageURLs=" + listOfimageURLs
				+ ", listOfmediaURLs=" + listOfmediaURLs + ", specificationGroups=" + specificationGroups
				+ ", bundleControl=" + bundleControl + ", productGroups=" + productGroups + ", misc=" + misc
				+ ", promoteAs=" + promoteAs + ", bundleDeviceSpecificPricingOverrides="
				+ bundleDeviceSpecificPricingOverrides + ", postSaleJourney=" + postSaleJourney + ", displayGroup="
				+ displayGroup + ", merchandisingVersion=" + merchandisingVersion + ", bundlePriceOverride="
				+ bundlePriceOverride + ", recommendataions=" + recommendataions + ", listOfEligibleChannels="
				+ listOfEligibleChannels + "]";
	}

	

}
