//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.02 at 10:51:22 AM IST 
//

package com.vf.uk.dal.device.datamodel.product;

import java.sql.Date;

public class PriceDetail {

	private String priceType;

	private boolean isInvoiceChargeable;

	private Double priceNet;

	private Double priceGross;

	private Double priceVAT;

	private Double vatCode;

	private Date priceStartDate;

	private Date priceEndDate;

	private String recurrence;

	public PriceDetail() {
		super();
		// TODO Auto-generated constructor stub
	}

	public String getPriceType() {
		return priceType;
	}

	public void setPriceType(String value) {
		this.priceType = value;
	}

	public boolean isIsInvoiceChargeable() {
		return isInvoiceChargeable;
	}

	public void setIsInvoiceChargeable(boolean value) {
		this.isInvoiceChargeable = value;
	}

	public Double getPriceNet() {
		return priceNet;
	}

	public void setPriceNet(Double value) {
		this.priceNet = value;
	}

	public Double getPriceGross() {
		return priceGross;
	}

	public void setPriceGross(Double value) {
		this.priceGross = value;
	}

	public Double getPriceVAT() {
		return priceVAT;
	}

	public void setPriceVAT(Double value) {
		this.priceVAT = value;
	}

	public Double getVatCode() {
		return vatCode;
	}

	public void setVatCode(Double value) {
		this.vatCode = value;
	}

	public Date getPriceStartDate() {
		return priceStartDate;
	}

	public void setPriceStartDate(Date value) {
		this.priceStartDate = value;
	}

	public Date getPriceEndDate() {
		return priceEndDate;
	}

	public void setPriceEndDate(Date value) {
		this.priceEndDate = value;
	}

	public String getRecurrence() {
		return recurrence;
	}

	public void setRecurrence(String value) {
		this.recurrence = value;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + (isInvoiceChargeable ? 1231 : 1237);
		result = prime * result + ((priceEndDate == null) ? 0 : priceEndDate.hashCode());
		result = prime * result + ((priceGross == null) ? 0 : priceGross.hashCode());
		result = prime * result + ((priceNet == null) ? 0 : priceNet.hashCode());
		result = prime * result + ((priceStartDate == null) ? 0 : priceStartDate.hashCode());
		result = prime * result + ((priceType == null) ? 0 : priceType.hashCode());
		result = prime * result + ((priceVAT == null) ? 0 : priceVAT.hashCode());
		result = prime * result + ((recurrence == null) ? 0 : recurrence.hashCode());
		result = prime * result + ((vatCode == null) ? 0 : vatCode.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		PriceDetail other = (PriceDetail) obj;
		if (isInvoiceChargeable != other.isInvoiceChargeable)
			return false;
		if (priceEndDate == null) {
			if (other.priceEndDate != null)
				return false;
		} else if (!priceEndDate.equals(other.priceEndDate))
			return false;
		if (priceGross == null) {
			if (other.priceGross != null)
				return false;
		} else if (!priceGross.equals(other.priceGross))
			return false;
		if (priceNet == null) {
			if (other.priceNet != null)
				return false;
		} else if (!priceNet.equals(other.priceNet))
			return false;
		if (priceStartDate == null) {
			if (other.priceStartDate != null)
				return false;
		} else if (!priceStartDate.equals(other.priceStartDate))
			return false;
		if (priceType == null) {
			if (other.priceType != null)
				return false;
		} else if (!priceType.equals(other.priceType))
			return false;
		if (priceVAT == null) {
			if (other.priceVAT != null)
				return false;
		} else if (!priceVAT.equals(other.priceVAT))
			return false;
		if (recurrence == null) {
			if (other.recurrence != null)
				return false;
		} else if (!recurrence.equals(other.recurrence))
			return false;
		if (vatCode == null) {
			if (other.vatCode != null)
				return false;
		} else if (!vatCode.equals(other.vatCode))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "PriceDetail [priceType=" + priceType + ", isInvoiceChargeable=" + isInvoiceChargeable + ", priceNet="
				+ priceNet + ", priceGross=" + priceGross + ", priceVAT=" + priceVAT + ", vatCode=" + vatCode
				+ ", priceStartDate=" + priceStartDate + ", priceEndDate=" + priceEndDate + ", recurrence=" + recurrence
				+ "]";
	}

}
