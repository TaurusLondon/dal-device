/*
 * Promotions API
 * Promotion API service operations
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.vf.uk.dal.utility.entity;

import java.util.Objects;

/**
 * CataloguepromotionqueriesForBundleAndHardwareExtras
 */
public class CataloguepromotionqueriesForBundleAndHardwareExtras {
  private String tag = null;

  private String label = null;

  private String type = null;

  private String priority = null;

  private String plancoupleId = null;

  private String description = null;

  public CataloguepromotionqueriesForBundleAndHardwareExtras tag(String tag) {
    this.tag = tag;
    return this;
  }

   /**
   * Unique tag name for the merchandising promotion
   * @return tag
  **/
  public String getTag() {
    return tag;
  }

  public void setTag(String tag) {
    this.tag = tag;
  }

  public CataloguepromotionqueriesForBundleAndHardwareExtras label(String label) {
    this.label = label;
    return this;
  }

   /**
   * Descriptive text for the merchandising promotion
   * @return label
  **/
  public String getLabel() {
    return label;
  }

  public void setLabel(String label) {
    this.label = label;
  }

  public CataloguepromotionqueriesForBundleAndHardwareExtras type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Merchandising promotion type
   * @return type
  **/
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public CataloguepromotionqueriesForBundleAndHardwareExtras priority(String priority) {
    this.priority = priority;
    return this;
  }

   /**
   * Priority for the merchandising promotion
   * @return priority
  **/
  public String getPriority() {
    return priority;
  }

  public void setPriority(String priority) {
    this.priority = priority;
  }

  public CataloguepromotionqueriesForBundleAndHardwareExtras plancoupleId(String plancoupleId) {
    this.plancoupleId = plancoupleId;
    return this;
  }

   /**
   * Plan couple id
   * @return plancoupleId
  **/
  public String getPlancoupleId() {
    return plancoupleId;
  }

  public void setPlancoupleId(String plancoupleId) {
    this.plancoupleId = plancoupleId;
  }

  public CataloguepromotionqueriesForBundleAndHardwareExtras description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Description of the promotion
   * @return description
  **/
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CataloguepromotionqueriesForBundleAndHardwareExtras cataloguepromotionqueriesForBundleAndHardwareExtras = (CataloguepromotionqueriesForBundleAndHardwareExtras) o;
    return Objects.equals(this.tag, cataloguepromotionqueriesForBundleAndHardwareExtras.tag) &&
        Objects.equals(this.label, cataloguepromotionqueriesForBundleAndHardwareExtras.label) &&
        Objects.equals(this.type, cataloguepromotionqueriesForBundleAndHardwareExtras.type) &&
        Objects.equals(this.priority, cataloguepromotionqueriesForBundleAndHardwareExtras.priority) &&
        Objects.equals(this.plancoupleId, cataloguepromotionqueriesForBundleAndHardwareExtras.plancoupleId) &&
        Objects.equals(this.description, cataloguepromotionqueriesForBundleAndHardwareExtras.description);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tag, label, type, priority, plancoupleId, description);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CataloguepromotionqueriesForBundleAndHardwareExtras {\n");
    
    sb.append("    tag: ").append(toIndentedString(tag)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    plancoupleId: ").append(toIndentedString(plancoupleId)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

